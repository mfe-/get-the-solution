# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - get-the-solution

on:
  push:
    branches:
      - main

  pull_request:
  workflow_dispatch:

jobs:
  convert_via_pandoc:
    runs-on: ubuntu-latest

    container: 
      image: pandoc/latex:latest

    steps:
      # checkout repo contents
      - uses: actions/checkout@v4

      # run pandoc to generate html from markdown
      - name: run pandoc
        working-directory: src/assets/database
        run: |
          for i in *.md; do pandoc --table-of-contents "$i" -o "${i%.*}".html --wrap=preserve --highlight-style=breezeDark --verbose; done

      # output generated file to build artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: generated-html-files
          path: |
            src/assets/database/*.html

  build:
    needs: convert_via_pandoc
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: generated-html-files
          path: src/assets/database

      - name: info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Branch name: ${{ github.ref }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Action: ${{ github.action }}"
          echo "Actor: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.repository_name }}"
          echo "Repository URL: ${{ github.repository_url }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run number: ${{ github.run_number }}"
          

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm install -g @angular/cli > /dev/null

      - name: export, build
        run: |
          export NODE_ENV=production
          npm run build:ssr --configuration=production --aot
#          npm run test --if-present

      - name: Zip artifact for deployment
        if: github.event_name != 'pull_request'
        run: |
          cat src/assets/database/blog.json

          cp src/assets/database/blog.json dist/get-the-solution-app/browser/assets/database/blog.json
          zip release.zip ./dist/* -r

      - name: Upload artifact for deployment job
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'get-the-solution'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_4233675665174DAFBD541E71E7D8D005 }}
          package: ./dist/get-the-solution-app
